{"version":3,"sources":["webpack/bootstrap 4d6b845d9766f686d35d","./public/javascripts/entry.js","./public/javascripts/gameView.js","./public/javascripts/game.js","./public/javascripts/centerShape.js","./public/javascripts/background.js","./public/javascripts/spaceman.js","./public/javascripts/wall.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;;;;;;ACHA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;ACzIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;;;;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4d6b845d9766f686d35d\n **/","var gameView = require ('./gameView.js');\n\nvar gv = new gameView();\ngv.initialize();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","var Game = require('./game');\n\nvar INSTRUCTIONS = \"<p>1 - SPACE to start<br><br>2 - LEFT and RIGHT to move<br><br>3 - EVADE WALLS for as long as you can.<br><br>4 - SPEED and DIFFICULTY will increase...quickly<br><br>5 - Only the FRONT EDGE of a wall will end your turn<br><br>6 - GOOD LUCK<br><br><span class='green'>PS - Headphones strongly advised. <br />'q' for music control.</span></p>\";\n\nfunction GameView() {\n  this.highScore = 0;\n  this.game = new Game();\n  this.ctx = document.getElementById(\"game-canvas\").getContext(\"2d\");\n  this.bindKeyListeners();\n}\n\nGameView.prototype.initialize = function(){\n  this.game.draw(this.ctx);\n};\n\nGameView.prototype.start = function(){\n  this.time = 0;\n  this.startTimer();\n  this.intervalGameStepper = setInterval(function() {\n    this.time += 2;\n    this.game.step(this.time);\n    this.game.draw(this.ctx);\n    if (!this.game.spaceMan.alive) {\n      this.handleHighScore();\n      this.restartGameAndWait();\n    }\n  }.bind(this), 20);\n};\n\nGameView.prototype.startTimer = function () {\n  var timer = document.getElementById('running-timer');\n  var highScore = document.getElementById('high-score');\n  setInterval(function(){\n    timer.innerHTML = (this.time/100).toFixed(2);\n    if (this.time > this.highScore) {\n      highScore.innerHTML = (this.time/100).toFixed(2);\n    }\n  }.bind(this), 10);\n};\n\nGameView.prototype.handleHighScore = function () {\n  if (this.highScore < this.time) {\n    this.highScore = this.time;\n  }\n};\n\nGameView.prototype.handleMusic= function(){\n  var audio = document.getElementsByTagName('audio')[0];\n  var button = document.getElementById('big-play-button');\n  if (button.innerHTML === \"▶\") {\n    if (audio.currentTime === 0) {\n      audio.currentTime = 3;\n    }\n    audio.play();\n    button.className = \"stupid\";\n    button.innerHTML = \"▣\";\n  } else {\n    audio.pause();\n    button.className = \"\";\n    button.innerHTML = \"▶\";\n  }\n};\n\nGameView.prototype.restartMusic = function () {\n  var audio = document.getElementsByTagName('audio')[0];\n  var button = document.getElementById('big-play-button');\n  audio.currentTime = 3;\n  button.className = \"stupid\";\n  button.innerHTML = \"▣\";\n  audio.play();\n};\n\nGameView.prototype.restartGameAndWait = function () {\n  clearInterval(this.intervalGameStepper);\n  this.game = new Game();\n  this.initialize();\n};\n\nGameView.prototype.restartGame  = function () {\n  clearInterval(this.intervalGameStepper);\n  this.game = new Game();\n  this.start();\n  this.restartMusic();\n};\n\nGameView.prototype.bindKeyListeners = function () {\n  document.addEventListener(\"keydown\", function(e){\n    if (e.keyCode === 38) {\n      this.game.sides += 1;\n      if (this.sides > 10){\n        this.game.sides = 10;\n      }\n      this.game.returnUpdatedObjects();\n    } else if (e.keyCode === 40) {\n      this.game.sides -= 1;\n      if (this.game.sides < 3) {\n        this.game.sides = 3;\n      }\n      this.game.returnUpdatedObjects();\n    } else if (e.keyCode === 39) {\n      this.game.spaceMan.leftDown = true;\n    } else if (e.keyCode === 37) {\n      this.game.spaceMan.rightDown = true;\n    } else if (e.keyCode === 32) {\n      this.handleHighScore();\n      this.restartGame();\n    } else if (e.keyCode === 81) {\n      this.handleMusic();\n    }\n  }.bind(this));\n\n  document.getElementById('big-play-button')\n          .addEventListener(\"click\", this.handleMusic);\n\n  document.addEventListener(\"keyup\", function(e){\n    if (e.keyCode === 39) {\n      this.game.spaceMan.leftDown = false;\n    } else if (e.keyCode === 37) {\n      this.game.spaceMan.rightDown = false;\n    }\n  }.bind(this));\n\n  document.getElementsByClassName('close-tab')[0].addEventListener(\"click\", function(e){\n    var instructionsTab = document.getElementsByClassName('instructions-tab')[0];\n    var instructions = document.getElementsByClassName('instructions')[0];\n    var openTab = document.getElementsByClassName('open-tab')[0];\n    openTab.id = \"\";\n    openTab.addEventListener('click', function(event){\n      instructionsTab.id = \"\";\n      instructions.innerHTML = INSTRUCTIONS;\n      openTab.id = \"hidden\";\n    });\n    instructions.innerHTML = \"\";\n    instructionsTab.id = \"hidden\";\n  });\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/gameView.js\n ** module id = 1\n ** module chunks = 0\n **/","var CenterShape = require('./centerShape');\nvar Background = require('./background');\nvar SpaceMan = require('./spaceman');\nvar Wall = require('./wall');\n\nvar WIDTH = 800;\nvar HEIGHT = 600;\n\nfunction Game(){\n  this.mainColor = \"#ee017b\";\n  this.centerRadius = 70;\n  this.playerRadius = 90;\n  this.globalSpeed = 0.5;\n  this.rotationSpeed = 0;\n  this.sides = 6;\n  this.rotation =  (this.globalSpeed * (Math.PI / 180));\n  this.walls = [];\n  this.backgroundShape = new Background({\n    sides: this.sides,\n    width: WIDTH,\n    height: HEIGHT,\n    radius: 600,\n    colors: [\"rgba(0,0,0,.8)\", \"rgba(6,16,68, .8)\"]\n  });\n  this.centerShape = new CenterShape({\n    sides: this.sides,\n    width: WIDTH,\n    height: HEIGHT,\n    radius: this.centerRadius,\n    colors: [\"black\", this.mainColor]\n  });\n  this.spaceMan = new SpaceMan({\n    width: WIDTH,\n    height: HEIGHT,\n    radius: this.playerRadius,\n    size: 10,\n    color: this.mainColor,\n    sides: this.sides\n  });\n}\n\nGame.prototype.returnUpdatedObjects = function () {\n  this.backgroundShape.sides = this.sides;\n  this.centerShape.sides = this.sides;\n  this.spaceMan.sides = this.sides;\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, WIDTH, HEIGHT);\n  ctx.save();\n  ctx.translate(WIDTH/2, HEIGHT/2);\n  ctx.rotate(this.rotation);\n  this.backgroundShape.drawBackground(ctx);\n  this.walls.forEach(function(wall){wall.draw(ctx);});\n  this.spaceMan.drawSelf(ctx);\n  this.centerShape.drawCenterShape(ctx);\n  ctx.restore();\n  this.rotation += (this.rotationSpeed * (Math.PI / 180));\n};\n\nGame.prototype.addWalls = function () {\n  this.lastTime = 0;\n  if (this.time < 1000) {\n    var interval = 125;\n  } else if (1000 < this.time && this.time < 4000) {\n    interval = 100;\n  } else {\n    interval = 50;\n  }\n  if (this.time % interval === 0 && this.time !== this.lastTime) {\n    this.lastTime = this.time;\n\t\tvar maxNewWalls = 0;\n\t\tif ( this.time < 500 ) {\n      maxNewWalls = 2;\n    } else if (500 <= this.time && this.time < 1000 ) {\n      maxNewWalls = 3;\n    } else if (1000 <= this.time && this.time < 4000) {\n      maxNewWalls = 4;\n    } else {\n      maxNewWalls = this.sides - 1;\n    }\n\n    var newWalls = Math.floor(1 + Math.random() * (maxNewWalls));\n    var sections = [];\n    while (sections.length < newWalls) {\n      var newWallSection = Math.floor(1 + (Math.random() * (this.sides)));\n      if (sections.indexOf(newWallSection) < 0) {\n        sections.push(newWallSection);\n      }\n    }\n    var toAdd = [];\n    sections.forEach(function(secNum){\n      toAdd.push(\n        new Wall({\n          section: secNum,\n          sides: this.sides,\n          color: this.mainColor,\n          gspeed: this.globalSpeed\n        })\n      );\n    }.bind(this));\n\n    this.walls = this.walls.concat(toAdd);\n    }\n\n};\n\nGame.prototype.handleWalls = function (wall, index) {\n  // if (wall.distance < 590) {\n  //   wall.distance = 589;\n  // }\n  if (wall.distance < this.centerRadius) {\n    this.walls.splice(index, 1);\n  } else {\n    wall.move();\n  }\n};\n\nGame.prototype.step = function(time) {\n  this.time = time;\n  this.spaceMan.move();\n\n  this.addWalls();\n  this.walls.forEach(function(wall, index){\n    this.handleWalls(wall, index);\n  }.bind(this));\n\n  var wallsToCheck = this.getRelevantWalls();\n  this.checkForCollision(wallsToCheck);\n  this.globalSpeed += 0.001;\n  this.handleRotationSpeed();\n};\n\nGame.prototype.handleRotationSpeed = function () {\n  var alternators = [-1, 1];\n  var speeds = {\n    smalls: [0.001, 0.002, 0.003],\n    mids: [0.005, 0.006, 0.007],\n    highs: [0.008, 0.009, 0.01],\n    veryhighs: [0.05, 0.06, 0.07]\n  };\n  function randomSpeed(type){\n    return speeds[type][Math.floor(Math.random() * 3)] * alternators[Math.floor(Math.random() * 2)] ;\n  }\n\n  function makeItWorse(){\n    var wow = [-1, 1, 1, 1];\n    return speeds[\"veryhighs\"][Math.floor(Math.random() * 3)] * wow[Math.floor(Math.random() * 3)] ;\n  }\n  var newSpeed = this.rotationSpeed;\n  if (400 < this.time && this.time < 900) {\n    newSpeed += randomSpeed(\"smalls\");\n  } else if (900 < this.time && this.time < 1700) {\n    newSpeed += randomSpeed(\"mids\");\n  } else if (1700 < this.time && this.time < 2300) {\n    newSpeed += randomSpeed(\"highs\");\n  } else if (2300 < this.time && this.time < 3000) {\n    newSpeed += randomSpeed(\"veryhighs\");\n  } else if (3000 < this.time && this.time < 6000){\n    newSpeed += randomSpeed('veryhighs');\n  } else if (6000 < this.time) {\n    newSpeed += makeItWorse();\n  }\n  if (newSpeed > 5) {\n    newSpeed = 5;\n  }\n  this.rotationSpeed = newSpeed;\n};\n\n\nGame.prototype.checkForCollision = function(walls) {\n  walls.forEach(function(wall){\n    if (wall.distance < 140 && 125 < wall.distance &&\n        wall.section === this.spaceMan.currentSection) {\n      this.spaceMan.alive = false;\n    }\n  }.bind(this));\n};\n\nGame.prototype.getRelevantWalls = function() {\n  var currentSection = this.spaceMan.currentSection;\n  var relevantWalls = this.walls.filter(function(wall) {\n    return wall.section === currentSection;\n  });\n  return relevantWalls;\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/game.js\n ** module id = 2\n ** module chunks = 0\n **/","function CenterShape(optionsHash) {\n  this.sides = optionsHash['sides'];\n  this.width = optionsHash['width'];\n  this.height = optionsHash['height'];\n  this.radius = optionsHash['radius'];\n  this.colors = optionsHash['colors'];\n  this.origin = [0, 0];\n  this.rotation = 0;\n}\n\nCenterShape.prototype.polygon =\n  function(ctx) {\n    if (this.sides < 3) {\n      this.sides = 3;\n    }\n    var angle = (Math.PI * 2)/this.sides;\n    var r = this.radius;\n\n    ctx.strokeStyle = this.colors[1];\n    ctx.fillStyle = this.colors[0];\n    ctx.lineWidth = 10;\n\n    ctx.save();\n    ctx.moveTo(r,0);\n    for (var i = 1; i < this.sides; i++) {\n      ctx.lineTo(r * Math.cos(angle * i),r * Math.sin(angle * i));\n      ctx.stroke();\n\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n\n};\n\nCenterShape.prototype.drawCenterShape = function (ctx) {\n  ctx.beginPath();\n  this.polygon(ctx);\n  ctx.stroke();\n};\n\nmodule.exports = CenterShape;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/centerShape.js\n ** module id = 3\n ** module chunks = 0\n **/","function Background(optionsHash) {\n  this.sides = optionsHash['sides'];\n  this.width = optionsHash['width'];\n  this.height = optionsHash['height'];\n  this.radius = optionsHash['radius'];\n  this.colors = optionsHash['colors'];\n  this.rotation = 0;\n}\n\nBackground.prototype.drawBackground =\n  function(ctx) {\n    if (this.sides < 3) {\n      this.sides = 3;\n    }\n    var angle = (Math.PI * 2)/this.sides;\n    var rotation = this.rotation + angle;\n    var w = this.width;\n    var h = this.height;\n    var r = this.radius;\n\n    for (var i = 1; i <= this.sides; i++) {\n      if (i % 2) {\n        ctx.fillStyle = this.colors[0];\n      } else {\n        ctx.fillStyle = this.colors[1];\n      }\n      var j = i + 1;\n      ctx.beginPath();\n      ctx.moveTo(0,0);\n      ctx.lineTo((Math.cos(angle*i) ) * r, (Math.sin(angle*i)) * r);\n      ctx.lineTo((Math.cos(angle*j) ) * r, (Math.sin(angle * j)) * r);\n      ctx.closePath();\n      ctx.fill();\n    }\n    this.rotation += -(Math.random() * 0.02);\n\n};\n\nmodule.exports = Background;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/background.js\n ** module id = 4\n ** module chunks = 0\n **/","function SpaceMan(optionsHash) {\n  this.radius = optionsHash['radius'];\n  this.angle = (Math.PI * 2 / 6);\n  this.size = optionsHash['size'];\n  this.globalSpeed = optionsHash['gspeed'];\n  this.alive = true;\n  this.sides = optionsHash['sides'];\n  this.color = optionsHash['color'];\n  this.pos = [this.radius * Math.cos(this.angle),\n              this.radius * Math.sin(this.angle)];\n  this.sections = this.returnSections(this.sides);\n  this.currentSection = 1;\n  this.bindKeyListeners();\n}\n\nSpaceMan.prototype.returnSections = function (sides) {\n  var sections = [];\n  for (var i = 1; i <= this.sides; i++) {\n    sections.push((Math.PI * 2 / 6) * i);\n  }\n  return sections;\n};\n\nSpaceMan.prototype.bindKeyListeners = function () {\n\n\n};\n\nSpaceMan.prototype.updateSection = function (angle) {\n  var currentSection;\n  for (var i = 0; i < this.sections.length; i++) {\n    if (angle >= this.sections[i]) {\n      currentSection = i + 1;\n    } else if (angle < this.sections[0]) {\n      currentSection = 6;\n    }\n  }\n  this.currentSection = currentSection;\n};\n\n\nSpaceMan.prototype.move = function () {\n  var r = this.radius;\n  var angle = this.angle;\n\n  if (this.leftDown) {\n    angle += 8 * Math.PI / 180;\n  } else if (this.rightDown) {\n    angle -= 8 * Math.PI / 180;\n  } else {\n    return;\n  }\n\n  if (angle < 0) {\n    angle = angle + (Math.PI * 2);\n  } else {\n    angle = angle % (Math.PI * 2);\n  }\n  var newX = r * Math.cos(angle);\n  var newY = r * Math.sin(angle);\n  this.pos = [newX, newY];\n  this.angle = angle;\n\n  this.updateSection(angle);\n};\n\nSpaceMan.prototype.drawSelf = function(ctx){\n  ctx.fillStyle = this.color;\n  ctx.strokeStyle = 'white';\n  ctx.lineWidth = 2;\n  ctx.beginPath();\n\n  ctx.arc(\n      this.pos[0],\n      this.pos[1],\n      this.size,\n      0,\n      2 * Math.PI,\n      false\n    );\n\n    ctx.stroke();\n    ctx.fill();\n};\n\n\n\nmodule.exports = SpaceMan;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/spaceman.js\n ** module id = 5\n ** module chunks = 0\n **/","function Wall(optionsHash) {\n  this.sides = optionsHash['sides'];\n  this.section = optionsHash['section'];\n  this.globalSpeed = optionsHash['gspeed'];\n  this.distance = 600;\n  this.width = 30;\n  this.collided = false;\n  this.color = optionsHash['color'];\n}\n\nWall.prototype.move = function() {\n  this.distance -= (3 + this.globalSpeed);\n};\n\nWall.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  var sides = this.sides;\n  var section = this.section;\n  var distance = this.distance;\n  var w = this.width;\n  var angle = (Math.PI * 2)/this.sides;\n  ctx.beginPath();\n  ctx.moveTo(Math.cos(angle * section) * distance, Math.sin(angle * section) * distance);\n  ctx.lineTo(Math.cos(angle * (section + 1)) * distance, Math.sin(angle * (section + 1)) * distance);\n  ctx.lineTo(Math.cos(angle * (section + 1)) * (distance - w), Math.sin(angle * (section + 1)) * (distance - w));\n  ctx.lineTo(Math.cos(angle * section) * (distance - w), Math.sin(angle * section) * (distance - w));\n  ctx.closePath();\n  ctx.fill();\n};\n\nmodule.exports = Wall;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/javascripts/wall.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}