{"version":3,"sources":["webpack/bootstrap c8dfeb6098633983691d","./lib/entry.js","./lib/gameView.js","./lib/game.js","./lib/polygon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;;;;;;;ACHA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;AAGA;AACA,0BAAyB,gBAAgB;AACzC,4BAA2B;AAC3B;;AAEA;;;;;;;ACrBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c8dfeb6098633983691d\n **/","var gameView = require ('./gameView.js');\n\nvar gv = new gameView();\ngv.start();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","var Game = require('./game');\n\nfunction GameView() {\n  this.game = new Game();\n  this.ctx = document.getElementById(\"game-canvas\").getContext(\"2d\");\n}\n\nGameView.prototype.start = function(){\n  this.bindKeyHandlers();\n  setInterval(function() {\n    this.game.step();\n    this.game.draw(this.ctx);\n  }.bind(this), 20);\n};\n\n\nGameView.prototype.bindKeyHandlers = function () {\n  key('left', function(){ alert(\"LEFT\") }.bind(this));\n  key('right', function(){}.bind(this));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 2\n ** module chunks = 0\n **/","var Polygon = require('./polygon');\n\nvar WIDTH = 800;\nvar HEIGHT = 600;\n\nfunction Game(){\n  this.time = 0;\n  this.backgroundShape = new Polygon({\n    sides: 6,\n    width: WIDTH,\n    height: HEIGHT,\n    radius: 70,\n    colors: [\"red\", \"blue\"]\n  });\n  this.centerShape = new Polygon({\n    sides: 6,\n    width: WIDTH,\n    height: HEIGHT,\n    radius: 500,\n    colors: [\"black\", \"green\"]\n  });\n}\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, WIDTH, HEIGHT);\n  this.centerShape.drawPolygon(ctx);\n  this.backgroundShape.drawPolygon(ctx);\n};\n\nGame.prototype.step = function () {\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 3\n ** module chunks = 0\n **/","\n\nfunction Polygon(optionsHash) {\n  this.sides = optionsHash['sides'];\n  this.width = optionsHash['width'];\n  this.height = optionsHash['height'];\n  this.radius = optionsHash['radius'];\n  this.colors = optionsHash['colors'];\n  this.origin = [this.width / 2, this.height / 2];\n  this.rotation = 0;\n}\n\nPolygon.prototype.drawPolygon =\n  function(ctx) {\n    if (this.sides < 3) {\n      this.sides = 3;\n    }\n    var angle = (Math.PI * 2)/this.sides;\n    var rotation = this.rotation + angle;\n    var w = this.width;\n    var h = this.height;\n    var r = this.radius;\n\n    for (var i = 1; i <= this.sides; i++) {\n      if (i % 2) {\n        ctx.fillStyle = this.colors[0];\n      } else {\n        ctx.fillStyle = this.colors[1];\n      }\n      var j = i + 1;\n      ctx.beginPath();\n      ctx.moveTo(this.origin[0],this.origin[1]);\n      ctx.lineTo(w/2 + (Math.cos(angle*i + rotation) ) * r, h/2 + (Math.sin(angle*i + rotation)) * r);\n      ctx.stroke();\n      ctx.lineTo(w/2 + (Math.cos(angle*j + rotation) ) * r, h/2 + (Math.sin(angle * j + rotation)) * r);\n      ctx.stroke();\n      ctx.closePath();\n      ctx.fill();\n    }\n    this.rotation += -(Math.random() * 0.02);\n\n};\n\nmodule.exports = Polygon;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/polygon.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}